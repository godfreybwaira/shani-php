@use '../global/vars';
@use '../global/callables' as cb;
@use '../global/extensions';
@use 'sass:math';

@mixin _position($gap, $prefix: null) {

    %_top#{$prefix} {
        top: $gap;
    }

    %_left#{$prefix} {
        left: $gap;
    }

    %_bottom#{$prefix} {
        bottom: $gap;
    }

    %_right#{$prefix} {
        right: $gap;
    }
}

$_factor: 1.5;
$_size: map-get(vars.$paddingSquare, 'sm');
@include _position($_size * -$_factor);
@include _position(math.div($_size, 3) * -$_factor, '-empty');

.badge {
    outline: cb.px2rem(.8px) solid currentColor;
    @extend %roundCorner, %posAbsolute;

    &:not(:empty) {
        $_dim: vars.size('xs') * $_factor;
        height: $_dim;
        min-width: $_dim;
        font-size: vars.fontSize('sm');
        @extend %flexible, %flexCenter, %padding-xs;
    }

    &:empty {
        height: cb.px2rem(10px);
        width: cb.px2rem(10px);
    }

    &-top-left {
        &:empty {
            @extend %_top-empty, %_left-empty;
        }

        &:not(:empty) {
            @extend %_top, %_left;
        }
    }

    &-top-right {
        &:empty {
            @extend %_top-empty, %_right-empty;
        }

        &:not(:empty) {
            @extend %_top, %_right;
        }
    }

    &-bottom-left {
        &:empty {
            @extend %_bottom-empty, %_left-empty;
        }

        &:not(:empty) {
            @extend %_bottom, %_left;
        }
    }

    &-bottom-right {
        &:empty {
            @extend %_bottom-empty, %_right-empty;
        }

        &:not(:empty) {
            @extend %_bottom, %_right;
        }
    }

    &-parent {
        @extend %posRelative;
    }
}