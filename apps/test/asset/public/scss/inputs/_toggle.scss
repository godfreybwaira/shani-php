@use '../global/vars';
@use '../global/extensions' as xt;
@use '../global/callables' as cb;
@use '../global/colors';
@use 'extensions';

$_toggleSize: vars.size('sm', 'md');

.toggle {
    $toggle: &;
    cursor: pointer;
    appearance: none;
    @extend %inlineFlex, %align-center, %posRelative;

    &:before {
        @extend %emptyContent;
    }

    &-type {
        &-1 {
            &:after {
                height: 65%;
                z-index: -1;
                @extend %colorShadow, %posAbsolute, %roundCorner, %emptyContent, %fullWidth;
            }

            &:before {
                width: 50%;
                background-color: colors.selectedTheme();
                @extend %fullHeight, %roundCorner, %greyBorder;
            }

            &:checked {
                &:before {
                    transform: translateX(100%);
                }
                &:after {
                    @extend %color-primary;
                }
            }
        }

        &-2 {
            $_gap: cb.px2rem(2px);
            padding: $_gap;
            border: $_gap solid colors.shadow();
            @extend %radiusDefault;

            $_max_width: 65%;

            &:before {
                left: $_gap;
                width: (100% - $_max_width);
                @extend %colorShadow, %posAbsolute;
            }

            &:after {
                right: 0;
                width: $_max_width;
                @extend %flexCenter, %flexible, %posAbsolute;
            }

            &:before,&:after {
                top: $_gap;
                bottom: $_gap;
            }

            &:checked {
                border-color: colors.primary();

                &:before {
                    left: calc($_max_width - $_gap);
                    @extend %color-primary;
                }

                &:after {
                    content: attr(data-on);
                    right: (100% - $_max_width);
                }
            }

            &:not(:checked):after {
                content: attr(data-off);
            }
        }
    }


    @each $key,
    $val in $_toggleSize {
        &#{$toggle}-size-#{$key} {
            min-width: $val * 2;
        }
    }
    &#{$toggle}-size-xs {
        $_size: cb.px2rem(20px);
        min-width: $_size * 2;
        height: $_size;
        @extend %font-xs;
    }
    @include xt.setHeight($_toggleSize);
}