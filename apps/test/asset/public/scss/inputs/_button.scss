@use '../global/vars';
@use '../global/callables' as cb;
@use '../global/extensions' as xt;
@use 'extensions';

.button {
    border: none;
    @extend %align-center;

    &:hover {
        @extend %cursorPointer;
        text-decoration: none;
    }

    &:not(&-block) {
        @extend %inlineFlex;
    }

    &:not(&-type-2) {
        @extend %radiusDefault;
    }

    &-type {

        &-2 {
            @extend %roundCorner;
        }

        &-3 {
            outline: cb.px2rem(1px) solid currentColor;
            outline-offset: cb.px2rem(-3px);
        }
    }

    &-block {
        @extend %fullWidth, %flexible;
    }

    @each $key,
    $val in vars.$inputSize {
        &-size-#{$key} {
            @extend %height-#{$key};

            @if($key !='sm' or $key !='md') {
                @extend %paddingY-md;
            }

            @else {
                @extend %paddingY-#{$key};
            }
        }
    }
}

%_cross {
    width: 60%;
    height: cb.px2rem(1px);
    background-color: currentColor;
    @extend %emptyContent;
}

%_directionBtn {
    $border: cb.px2rem(3px) solid currentColor;
    width: 40%;
    height: 40%;
    display: block;
    border-right: $border;
    border-bottom: $border;
    border-bottom-right-radius: map-get(vars.$borderRadius, 'xs');

}

@mixin _directionBtn($angle) {
    &:before {
        transform: rotate($angle);
        @extend %emptyContent, %_directionBtn;
    }

}

@mixin _rotateCross($angle) {
    &:after {
        transform: rotate($angle);
        @extend %_cross, %posAbsolute;
    }
}

.action-btn {
    $angle: 45deg;
    $btnSize: vars.size('xs', 'sm', 'md', 'lg');
    @extend %roundCorner, %inlineFlex, %flexCenter,
    %posRelative, %cursorPointer;

    &-times {

        &:before {
            transform: rotate($angle);
            @extend %_cross;
        }

        @include _rotateCross(-$angle);
    }

    &-plus {
        &:before {
            @extend %_cross;
        }

        @include _rotateCross($angle * 2);
    }

    &-prev {
        @include _directionBtn($angle * 3);
    }

    &-next {
        @include _directionBtn(-$angle);
    }

    &-maximize {

        &:before,
        &:after {
            width: 40%;
            height: 40%;
            border: cb.px2rem(1px) solid currentColor;
            @extend %emptyContent, %posAbsolute;
        }
        &:after{
            bottom: 30%;
            left: 70%;
            border-bottom-color: transparent;
            border-left-color: transparent;
            transform: translate(-80%,-20%);
        }
    }

    @each $key,
    $val in $btnSize {
        &-size-#{$key} {
            @extend %height-#{$key};
            width: $val;
        }
    }
}