@use '../utils/callables/extensions' as ext;
@use '../utils/callables/variables' as var;
@use '../utils/callables/functions' as fn;

.grid-layout{
    display: grid;
    @extend %full_size;
    &,>*{
        overflow: auto;
    }
}

.content{
    &-navbar{
        $color: if(fn.isDarkColor(var.$bg_color),var(--fg-color),rgba(22, 22, 23, 0.25));
        display: flex;
        justify-content: space-between;
        background: linear-gradient($color, transparent);
        border-bottom: if(fn.isDarkColor(var.$bg_color),var(--thin-border),none);
    }
    &-body{
        flex: 1;
        overflow: auto;
    }
}

.layout{
    &-content{
        flex: 1;
        display: flex;
        overflow-y: auto;
        flex-direction: column;
        background-color: var(--bg-color);
    }
    &-menu{
        order: 1;
        z-index: 1;
        @if(fn.isDarkColor(var.$bg_color)==false){
            box-shadow: var(--shadow-md);
        }
        .menu-item.active{
            color: var(--font-color);
            background: var.$bg_color;
            &:after{
                left: 0;
                bottom: 0;
                content: '';
                height: calc(var(--spacing)/5);
                background-color: currentColor;
                @extend %position_absolute, %full_width;
            }
        }
        @include ext.media(map-get(var.$breakpoints, md)) {
            & {
                order: -1;
            }
            &>*{
                flex-direction: column;
            }

            .menu-item{
                flex: none;
                &.active:after{
                    height: 100%;
                    width: calc(var(--spacing)/5);
                }
            }
        }
    }
    &-container{
        display: flex;
        @extend %full_size;
        flex-direction: column;
        @include ext.media(map-get(var.$breakpoints, md)) {
            & {
                flex-direction: row;
            }
        }
    }
}
