@use '../utils/callables/extensions' as ext;
@use '../utils/callables/variables' as var;
@use '../utils/callables/functions' as fn;
@use 'sass:map';

.grid-layout{
    display: grid;
    @extend %full_size;
    &,>*{
        overflow: auto;
    }
}

.content{
    &-navbar{
        display: flex;
        justify-content: space-between;
        border-bottom: var(--thin-border);
        background: var(--theme-color);
    }
    &-body{
        flex: 1;
        overflow: auto;
    }
}

.layout{
    &-content{
        flex: 1;
        display: flex;
        overflow: hidden auto;
        flex-direction: column;
        background-color: var(--bg-color);
    }
    &-menu{
        order: 1;
        z-index: 1;
        @if(fn.isDarkColor(var.$bg_color)==false){
            box-shadow: var(--shadow-md);
        }
        &>*{
            gap: calc(var(--spacing)/2);
            @extend %padding_xy_sm;
        }
        .menu-item{
            justify-content: start;
            border-radius: calc(var(--spacing)/2);
            @extend %padding_xy_sm;
            &-dir-v:after{
                width: 0;
                content: '';
                height: fn.px2rem(2px);
                bottom: calc(var(--spacing)/3);
                background-color: currentColor;
                @extend %position_absolute;
            }
            &.active{
                $size: fn.px2rem(3px);
                box-shadow: inset $size $size $size var(--color-6),
                    inset -#{$size} -#{$size} $size var(--color-12);
                &:after{
                    width: 50%;
                }
            }
            &:not(.active):hover{
                background: var(--hover-color);
            }
        }
        @include ext.media(map.get(var.$breakpoints, md)) {
            & {
                order: -1;
            }
            &>*{
                flex-direction: column;
            }
            .menu-item{
                flex: none;
            }
        }
    }
    &-container{
        display: flex;
        @extend %full_size;
        flex-direction: column;
        @include ext.media(map.get(var.$breakpoints, md)) {
            & {
                flex-direction: row;
            }
        }
    }
}
